# Use a base image with Ubuntu
FROM ubuntu:20.04

LABEL maintainer="azahir@pa.uc3m.es"

# Set environment variables to avoid user interaction during the installation
ENV DEBIAN_FRONTEND=noninteractive

# Install the required packages
RUN apt-get update && \
    apt-get install -y build-essential wget software-properties-common \
    iproute2 iputils-ping git golang \
&& apt-get clean \
&& rm -rf /var/lib/apt/lists/*

# Set Go environment variables
ENV GO111MODULE=on
ENV PATH=$PATH:/usr/local/go/bin
ENV GOROOT=/usr/local/go
ENV GOPATH=/root/go

# Download and install Go
RUN wget https://golang.org/dl/go1.16.6.linux-amd64.tar.gz && \
    tar -C /usr/local -xzf go1.16.6.linux-amd64.tar.gz && \
    rm go1.16.6.linux-amd64.tar.gz

# Clone the Geth repository and checkout the specific version
RUN git clone https://github.com/ethereum/go-ethereum.git && \
    cd go-ethereum && \
    git checkout v1.13.0 && \
    make geth && \
    make bootnode && \
    cp build/bin/geth /usr/local/bin/ && \
    cp build/bin/bootnode /usr/local/bin/ && \
    cd .. && \
    rm -rf go-ethereum

# Set the working directory inside the container
WORKDIR /dlt-network

# Copy the entire directories and their contents into the container
COPY bootnode ./bootnode
COPY node1 ./node1
COPY node2 ./node2
COPY node3 ./node3
COPY node4 ./node4

# Copy the shell scripts and other files
COPY scripts/*_start.sh ./
COPY scripts/password.txt ./ 
COPY scripts/genesis.json ./

# Make bash scripts executable
RUN chmod +x *_start.sh

# Keep container running
#CMD tail -f /dev/null


